{"componentChunkName":"component---src-templates-blog-post-js","path":"/arangodb-devops/","result":{"data":{"site":{"siteMetadata":{"title":"Pooya Golchian","author":"Pooya Golchian"}},"markdownRemark":{"id":"8d6b7da6-ea3c-533a-a419-564015f2375a","excerpt":"Intro I use Shell script for all steps to automate Arangodb backup and update from a to z! Install last verison of Arangodb on Ubuntu 18.04 For installation…","html":"<h3>Intro</h3>\n<p>I use Shell script for all steps to automate Arangodb backup and update from a to z!</p>\n<h3>Install last verison of Arangodb on Ubuntu 18.04</h3>\n<p>For installation, you should visit the Arango website to check the last version of this database.\nNow the last version is <code class=\"language-text\">3.6.5-1</code>.\nFor installing this version and configuration web interface run the below sh file on your server,\nin this example, I’m testing this script on the AWS EC2 server.</p>\n<h4>WARNING!</h4>\n<p>You should stop arangodb3 and turn your application into maintenance mode!</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token function\">sudo</span> systemctl stop arangodb3.service\n<span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> /etc/arangodb3/ ~/arango-config-backup\n<span class=\"token function\">curl</span> -OL https://download.arangodb.com/arangodb36/DEBIAN/Release.key\n<span class=\"token function\">sudo</span> apt-key <span class=\"token function\">add</span> - <span class=\"token operator\">&lt;</span> Release.key\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'deb https://download.arangodb.com/arangodb36/DEBIAN/ /'</span> <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/apt/sources.list.d/arangodb.list\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> apt-transport-https\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> <span class=\"token assign-left variable\">arangodb3</span><span class=\"token operator\">=</span><span class=\"token number\">3.6</span>.5-1\n<span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> -i <span class=\"token string\">\"s+endpoint = tcp://127.0.0.1:8529+endpoint = tcp://0.0.0.0:8529+g\"</span> /etc/arangodb3/arangod.conf\n<span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> -i <span class=\"token string\">\"s+endpoint = tcp://127.0.0.1:8529+endpoint = tcp://0.0.0.0:8529+g\"</span> /etc/arangodb3/arangosh.conf\n<span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> -i <span class=\"token string\">\"s+endpoint = tcp://127.0.0.1:8529+endpoint = tcp://0.0.0.0:8529+g\"</span> /etc/arangodb3/foxx-manager.conf\n<span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> -i <span class=\"token string\">\"s/#queues = true/queues = true/g\"</span> /etc/arangodb3/arangod.conf\n<span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> arangodb3.service\n<span class=\"token function\">sudo</span> systemctl start arangodb3.service\n<span class=\"token function\">sudo</span> systemctl status arangodb3.service\n<span class=\"token function\">sudo</span> sysctl -w <span class=\"token string\">\"vm.max_map_count=1024000\"</span></code></pre></div>\n<h3>Arangodb backup and upload to s3</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n<span class=\"token assign-left variable\">NOWDATE</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">date</span> +%Y-%m-%d<span class=\"token variable\">`</span></span>\n<span class=\"token assign-left variable\">LASTDATE</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y-%m-%d --date<span class=\"token operator\">=</span><span class=\"token string\">'1 week ago'</span><span class=\"token variable\">)</span></span>\n<span class=\"token assign-left variable\">DIRNAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"Your directory name\"</span>\n<span class=\"token assign-left variable\">BUCKETNAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"Your bucketname in S3\"</span>\n<span class=\"token assign-left variable\">DATABASENAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"Your database name\"</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -d <span class=\"token string\">\"/home/ubuntu/backup/<span class=\"token variable\">$DIRNAME</span>\"</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Directory /home/ubuntu/backup/<span class=\"token variable\">$DIRNAME</span> exists.\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Error: Directory /home/ubuntu/backup/<span class=\"token variable\">$DIRNAME</span> does not exists.\"</span>\n    <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">mkdir</span> -p /home/ubuntu/backup/$DIRNAME<span class=\"token variable\">`</span></span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"FOLDER <span class=\"token variable\">$DIRNAME</span> CREATED!\"</span>\n<span class=\"token keyword\">fi</span>\narangodump --server.endpoint tcp://127.0.0.1:8529 --server.username root --server.password <span class=\"token string\">'as&amp;m0ssJM1299'</span> --server.database <span class=\"token variable\">$DATABASENAME</span> --output-directory <span class=\"token string\">\"/home/ubuntu/backup/<span class=\"token variable\">$DIRNAME</span>/\"</span> --compress-output --overwrite <span class=\"token boolean\">true</span>\n<span class=\"token function\">tar</span> -czvf /home/ubuntu/backup/<span class=\"token variable\">$NOWDATE</span>-<span class=\"token variable\">$DATABASENAME</span>-backup.tar.gz -C /home/ubuntu/backup/<span class=\"token variable\">$DIRNAME</span> <span class=\"token builtin class-name\">.</span>\naws s3 <span class=\"token function\">cp</span> /home/ubuntu/backup/<span class=\"token variable\">$NOWDATE</span>-<span class=\"token variable\">$DATABASENAME</span>-backup.tar.gz  s3://<span class=\"token variable\">$BUCKETNAME</span>/dbbackup/\naws s3 <span class=\"token function\">rm</span> s3://<span class=\"token variable\">$BUCKETNAME</span>/dbbackup/<span class=\"token variable\">$LASTDATE</span>-<span class=\"token variable\">$DATABASENAME</span>-backup.tar.gz\n<span class=\"token function\">rm</span> -rf /home/ubuntu/backup/<span class=\"token variable\">$NOWDATE</span>-<span class=\"token variable\">$DATABASENAME</span>-backup.tar.gz\n<span class=\"token function\">rm</span> -rf  /home/ubuntu/backup/<span class=\"token variable\">$DIRNAME</span>/*</code></pre></div>\n<h3>Arangodb restore and download from s3</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/sh</span>\n<span class=\"token assign-left variable\">DIRNAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"Your directory name\"</span>\n<span class=\"token assign-left variable\">BUCKETNAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"Your bucket name in S3\"</span>\n<span class=\"token assign-left variable\">DATABASENAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"Your database name\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Please enter file date (ONLY DATE LIKE 2020-07-16):\"</span>\n<span class=\"token builtin class-name\">read</span> FILE_NAME\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -d <span class=\"token string\">\"/home/ubuntu/backup/<span class=\"token variable\">$DIRNAME</span>\"</span> <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Directory /home/ubuntu/backup/<span class=\"token variable\">$DIRNAME</span> exists.\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Error: Directory /home/ubuntu/backup/<span class=\"token variable\">$DIRNAME</span> does not exists.\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token string\">\"Please backup database with shell script\"</span>\n<span class=\"token keyword\">fi</span>\naws s3 <span class=\"token function\">cp</span>  s3://<span class=\"token variable\">$BUCKETNAME</span>/dbbackup/<span class=\"token variable\">$FILE_NAME</span>-<span class=\"token variable\">$DATABASENAME</span>-backup.tar.gz  /home/ubuntu/backup/\n<span class=\"token function\">tar</span> -xzvf /home/ubuntu/backup/<span class=\"token variable\">$FILE_NAME</span>-<span class=\"token variable\">$DATABASENAME</span>-backup.tar.gz -C /home/ubuntu/backup/<span class=\"token variable\">$DIRNAME</span>\narangorestore --server.endpoint tcp://127.0.0.1:8529 --server.username root --server.password <span class=\"token string\">'as&amp;m0ssJM1299'</span> --server.database <span class=\"token variable\">$DATABASENAME</span> --input-directory <span class=\"token string\">\"/home/ubuntu/backup/<span class=\"token variable\">$DIRNAME</span>\"</span> --create-database\n<span class=\"token function\">rm</span> -rf /home/ubuntu/backup/<span class=\"token variable\">$FILE_NAME</span>-<span class=\"token variable\">$DATABASENAME</span>-backup.tar.gz\n<span class=\"token function\">rm</span> -rf  /home/ubuntu/backup/<span class=\"token variable\">$DIRNAME</span>/*</code></pre></div>\n<h3>Add systemd service for life!</h3>\n<p>It’s a really good feature to automated tasks with system service to manage all services separately.</p>\n<p>1- First you go to <code class=\"language-text\">/etc/systemd/system</code> and add <code class=\"language-text\">backup.servive</code> and <code class=\"language-text\">backup.timer</code>\n2- Backup service file for the run backup script\n3- Timer for the run backup script and specific time.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>Schedule to run backup <span class=\"token function\">service</span>\n<span class=\"token punctuation\">[</span>Timer<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">OnCalendar</span><span class=\"token operator\">=</span>\n<span class=\"token assign-left variable\">OnCalendar</span><span class=\"token operator\">=</span>*-*-* 02:30:00\n<span class=\"token assign-left variable\">Unit</span><span class=\"token operator\">=</span>backup.service\n<span class=\"token punctuation\">[</span>Install<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">WantedBy</span><span class=\"token operator\">=</span>multi-user.target</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>Unit<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">Description</span><span class=\"token operator\">=</span>Run sportbook  Arango DB backup script <span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span>Service<span class=\"token punctuation\">]</span>\n<span class=\"token assign-left variable\">ExecStart</span><span class=\"token operator\">=</span>/bin/bash /home/ubuntu/backup/backup.sh</code></pre></div>\n<p>After creating these two files in the system you must restart the service like below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo systemctl daemon-reload\nsudo systemctl start backup.time\nsudo systemctl status backup.time</code></pre></div>\n<p>Now you have an automatic backup system with a timer on your server.</p>","frontmatter":{"title":"Arangodb install last version and configuration and backup and restore from Amazon AWS","date":"July 22, 2020"}}},"pageContext":{"slug":"/arangodb-devops/","previous":{"fields":{"slug":"/ssh-tunnel/"},"frontmatter":{"title":"Setup and configuration SSH tunnel and create the poor man's VPN on Linux, MacOs, Windows 10"}},"next":null}}}